// Code generated by gocc; DO NOT EDIT.

package parser

type (
	actionTable [numStates]actionRow
	actionRow   struct {
		canRecover bool
		actions    [numSymbols]action
	}
)

var actionTab = actionTable{
	actionRow{ // S0
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			reduce(2), // program, reduce: Reset
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S1
		canRecover: false,
		actions: [numSymbols]action{
			nil,          // INVALID
			accept(true), // ␚
			nil,          // empty
			nil,          // program
			nil,          // id
			nil,          // ;
			nil,          // main
			nil,          // end
			nil,          // var
			nil,          // :
			nil,          // ,
			nil,          // int
			nil,          // float
			nil,          // void
			nil,          // (
			nil,          // )
			nil,          // [
			nil,          // ]
			nil,          // {
			nil,          // }
			nil,          // =
			nil,          // <
			nil,          // >
			nil,          // !=
			nil,          // +
			nil,          // -
			nil,          // *
			nil,          // /
			nil,          // cte_int
			nil,          // cte_float
			nil,          // print
			nil,          // cte_string
			nil,          // while
			nil,          // do
			nil,          // if
			nil,          // else
		},
	},
	actionRow{ // S2
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // ␚
			nil,      // empty
			shift(4), // program
			nil,      // id
			nil,      // ;
			nil,      // main
			nil,      // end
			nil,      // var
			nil,      // :
			nil,      // ,
			nil,      // int
			nil,      // float
			nil,      // void
			nil,      // (
			nil,      // )
			nil,      // [
			nil,      // ]
			nil,      // {
			nil,      // }
			nil,      // =
			nil,      // <
			nil,      // >
			nil,      // !=
			nil,      // +
			nil,      // -
			nil,      // *
			nil,      // /
			nil,      // cte_int
			nil,      // cte_float
			nil,      // print
			nil,      // cte_string
			nil,      // while
			nil,      // do
			nil,      // if
			nil,      // else
		},
	},
	actionRow{ // S3
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(1), // ␚, reduce: Start
			nil,       // empty
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S4
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // ␚
			nil,      // empty
			nil,      // program
			shift(5), // id
			nil,      // ;
			nil,      // main
			nil,      // end
			nil,      // var
			nil,      // :
			nil,      // ,
			nil,      // int
			nil,      // float
			nil,      // void
			nil,      // (
			nil,      // )
			nil,      // [
			nil,      // ]
			nil,      // {
			nil,      // }
			nil,      // =
			nil,      // <
			nil,      // >
			nil,      // !=
			nil,      // +
			nil,      // -
			nil,      // *
			nil,      // /
			nil,      // cte_int
			nil,      // cte_float
			nil,      // print
			nil,      // cte_string
			nil,      // while
			nil,      // do
			nil,      // if
			nil,      // else
		},
	},
	actionRow{ // S5
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // ␚
			nil,      // empty
			nil,      // program
			nil,      // id
			shift(6), // ;
			nil,      // main
			nil,      // end
			nil,      // var
			nil,      // :
			nil,      // ,
			nil,      // int
			nil,      // float
			nil,      // void
			nil,      // (
			nil,      // )
			nil,      // [
			nil,      // ]
			nil,      // {
			nil,      // }
			nil,      // =
			nil,      // <
			nil,      // >
			nil,      // !=
			nil,      // +
			nil,      // -
			nil,      // *
			nil,      // /
			nil,      // cte_int
			nil,      // cte_float
			nil,      // print
			nil,      // cte_string
			nil,      // while
			nil,      // do
			nil,      // if
			nil,      // else
		},
	},
	actionRow{ // S6
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			nil,       // ;
			reduce(4), // main, reduce: Vars
			nil,       // end
			shift(8),  // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			reduce(4), // void, reduce: Vars
			nil,       // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S7
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			reduce(10), // main, reduce: Funcs
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			shift(11),  // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S8
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			shift(12), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S9
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			nil,       // ;
			shift(14), // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S10
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			reduce(10), // main, reduce: Funcs
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			shift(11),  // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S11
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			shift(16), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S12
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			reduce(6), // :, reduce: VarList
			shift(17), // ,
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S13
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			shift(18), // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S14
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // (
			nil,       // )
			nil,       // [
			nil,       // ]
			shift(20), // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S15
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			reduce(11), // main, reduce: Funcs
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S16
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			shift(21), // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S17
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			shift(12), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S18
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			shift(24), // int
			shift(25), // float
			nil,       // void
			nil,       // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S19
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			shift(26), // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S20
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			shift(27),  // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			reduce(17), // }, reduce: StatementList
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			shift(35),  // print
			nil,        // cte_string
			shift(36),  // while
			nil,        // do
			shift(37),  // if
			nil,        // else
		},
	},
	actionRow{ // S21
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			shift(38), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // (
			shift(39), // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S22
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			reduce(7), // :, reduce: VarList
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S23
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			shift(41), // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S24
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			reduce(8), // ;, reduce: Type
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S25
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			reduce(9), // ;, reduce: Type
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S26
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(3), // ␚, reduce: Programa
			nil,       // empty
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S27
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			shift(42), // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			shift(43), // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S28
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			shift(44), // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S29
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			shift(27),  // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			reduce(17), // }, reduce: StatementList
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			shift(35),  // print
			nil,        // cte_string
			shift(36),  // while
			nil,        // do
			shift(37),  // if
			nil,        // else
		},
	},
	actionRow{ // S30
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			reduce(19), // id, reduce: Statement
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			reduce(19), // }, reduce: Statement
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			reduce(19), // print, reduce: Statement
			nil,        // cte_string
			reduce(19), // while, reduce: Statement
			nil,        // do
			reduce(19), // if, reduce: Statement
			nil,        // else
		},
	},
	actionRow{ // S31
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			reduce(20), // id, reduce: Statement
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			reduce(20), // }, reduce: Statement
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			reduce(20), // print, reduce: Statement
			nil,        // cte_string
			reduce(20), // while, reduce: Statement
			nil,        // do
			reduce(20), // if, reduce: Statement
			nil,        // else
		},
	},
	actionRow{ // S32
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			reduce(21), // id, reduce: Statement
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			reduce(21), // }, reduce: Statement
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			reduce(21), // print, reduce: Statement
			nil,        // cte_string
			reduce(21), // while, reduce: Statement
			nil,        // do
			reduce(21), // if, reduce: Statement
			nil,        // else
		},
	},
	actionRow{ // S33
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			reduce(22), // id, reduce: Statement
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			reduce(22), // }, reduce: Statement
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			reduce(22), // print, reduce: Statement
			nil,        // cte_string
			reduce(22), // while, reduce: Statement
			nil,        // do
			reduce(22), // if, reduce: Statement
			nil,        // else
		},
	},
	actionRow{ // S34
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			reduce(23), // id, reduce: Statement
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			reduce(23), // }, reduce: Statement
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			reduce(23), // print, reduce: Statement
			nil,        // cte_string
			reduce(23), // while, reduce: Statement
			nil,        // do
			reduce(23), // if, reduce: Statement
			nil,        // else
		},
	},
	actionRow{ // S35
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			shift(46), // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S36
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			shift(47), // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S37
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			shift(48), // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S38
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			shift(49), // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S39
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // (
			nil,       // )
			shift(50), // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S40
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // (
			shift(51), // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S41
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			nil,       // ;
			reduce(4), // main, reduce: Vars
			nil,       // end
			shift(8),  // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			reduce(4), // void, reduce: Vars
			nil,       // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S42
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			shift(53), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			shift(54), // (
			shift(55), // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(60), // cte_int
			shift(61), // cte_float
			nil,       // print
			shift(63), // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S43
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			shift(64), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			shift(65), // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(70), // cte_int
			shift(71), // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S44
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			reduce(16), // end, reduce: Body
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S45
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			reduce(18), // }, reduce: StatementList
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S46
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			shift(53), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			shift(54), // (
			shift(72), // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(60), // cte_int
			shift(61), // cte_float
			nil,       // print
			shift(63), // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S47
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			shift(74), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			shift(75), // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(80), // cte_int
			shift(81), // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S48
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			shift(74), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			shift(75), // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(80), // cte_int
			shift(81), // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S49
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			shift(84), // int
			shift(85), // float
			nil,       // void
			nil,       // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S50
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			shift(87), // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // (
			nil,       // )
			nil,       // [
			nil,       // ]
			reduce(4), // {, reduce: Vars
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S51
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // (
			nil,       // )
			shift(88), // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S52
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			nil,       // ;
			reduce(5), // main, reduce: Vars
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			reduce(5), // void, reduce: Vars
			nil,       // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S53
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			reduce(38), // ,, reduce: Primary
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(38), // ), reduce: Primary
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			reduce(38), // <, reduce: Primary
			reduce(38), // >, reduce: Primary
			reduce(38), // !=, reduce: Primary
			reduce(38), // +, reduce: Primary
			reduce(38), // -, reduce: Primary
			reduce(38), // *, reduce: Primary
			reduce(38), // /, reduce: Primary
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S54
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			shift(74), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			shift(75), // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(80), // cte_int
			shift(81), // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S55
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			shift(90), // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S56
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			shift(91),  // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(43), // ), reduce: ArgList
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S57
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			reduce(26), // ,, reduce: RelExpr
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(26), // ), reduce: RelExpr
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			shift(94),  // <
			shift(95),  // >
			shift(96),  // !=
			shift(97),  // +
			shift(98),  // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S58
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			reduce(33), // ,, reduce: AddExpr
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(33), // ), reduce: AddExpr
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			reduce(33), // <, reduce: AddExpr
			reduce(33), // >, reduce: AddExpr
			reduce(33), // !=, reduce: AddExpr
			reduce(33), // +, reduce: AddExpr
			reduce(33), // -, reduce: AddExpr
			shift(99),  // *
			shift(100), // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S59
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			reduce(36), // ,, reduce: MulExpr
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(36), // ), reduce: MulExpr
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			reduce(36), // <, reduce: MulExpr
			reduce(36), // >, reduce: MulExpr
			reduce(36), // !=, reduce: MulExpr
			reduce(36), // +, reduce: MulExpr
			reduce(36), // -, reduce: MulExpr
			reduce(36), // *, reduce: MulExpr
			reduce(36), // /, reduce: MulExpr
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S60
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			reduce(39), // ,, reduce: Primary
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(39), // ), reduce: Primary
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			reduce(39), // <, reduce: Primary
			reduce(39), // >, reduce: Primary
			reduce(39), // !=, reduce: Primary
			reduce(39), // +, reduce: Primary
			reduce(39), // -, reduce: Primary
			reduce(39), // *, reduce: Primary
			reduce(39), // /, reduce: Primary
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S61
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			reduce(40), // ,, reduce: Primary
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(40), // ), reduce: Primary
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			reduce(40), // <, reduce: Primary
			reduce(40), // >, reduce: Primary
			reduce(40), // !=, reduce: Primary
			reduce(40), // +, reduce: Primary
			reduce(40), // -, reduce: Primary
			reduce(40), // *, reduce: Primary
			reduce(40), // /, reduce: Primary
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S62
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			shift(101), // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S63
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(45), // ), reduce: ArgList
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S64
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			reduce(38), // ;, reduce: Primary
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			reduce(38), // <, reduce: Primary
			reduce(38), // >, reduce: Primary
			reduce(38), // !=, reduce: Primary
			reduce(38), // +, reduce: Primary
			reduce(38), // -, reduce: Primary
			reduce(38), // *, reduce: Primary
			reduce(38), // /, reduce: Primary
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S65
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			shift(74), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			shift(75), // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(80), // cte_int
			shift(81), // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S66
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			shift(103), // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S67
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			reduce(26), // ;, reduce: RelExpr
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			shift(94),  // <
			shift(95),  // >
			shift(96),  // !=
			shift(106), // +
			shift(107), // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S68
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			reduce(33), // ;, reduce: AddExpr
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			reduce(33), // <, reduce: AddExpr
			reduce(33), // >, reduce: AddExpr
			reduce(33), // !=, reduce: AddExpr
			reduce(33), // +, reduce: AddExpr
			reduce(33), // -, reduce: AddExpr
			shift(108), // *
			shift(109), // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S69
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			reduce(36), // ;, reduce: MulExpr
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			reduce(36), // <, reduce: MulExpr
			reduce(36), // >, reduce: MulExpr
			reduce(36), // !=, reduce: MulExpr
			reduce(36), // +, reduce: MulExpr
			reduce(36), // -, reduce: MulExpr
			reduce(36), // *, reduce: MulExpr
			reduce(36), // /, reduce: MulExpr
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S70
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			reduce(39), // ;, reduce: Primary
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			reduce(39), // <, reduce: Primary
			reduce(39), // >, reduce: Primary
			reduce(39), // !=, reduce: Primary
			reduce(39), // +, reduce: Primary
			reduce(39), // -, reduce: Primary
			reduce(39), // *, reduce: Primary
			reduce(39), // /, reduce: Primary
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S71
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			reduce(40), // ;, reduce: Primary
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			reduce(40), // <, reduce: Primary
			reduce(40), // >, reduce: Primary
			reduce(40), // !=, reduce: Primary
			reduce(40), // +, reduce: Primary
			reduce(40), // -, reduce: Primary
			reduce(40), // *, reduce: Primary
			reduce(40), // /, reduce: Primary
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S72
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			shift(110), // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S73
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			shift(111), // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S74
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(38), // ), reduce: Primary
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			reduce(38), // <, reduce: Primary
			reduce(38), // >, reduce: Primary
			reduce(38), // !=, reduce: Primary
			reduce(38), // +, reduce: Primary
			reduce(38), // -, reduce: Primary
			reduce(38), // *, reduce: Primary
			reduce(38), // /, reduce: Primary
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S75
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			shift(74), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			shift(75), // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(80), // cte_int
			shift(81), // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S76
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			shift(113), // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S77
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(26), // ), reduce: RelExpr
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			shift(94),  // <
			shift(95),  // >
			shift(96),  // !=
			shift(116), // +
			shift(117), // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S78
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(33), // ), reduce: AddExpr
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			reduce(33), // <, reduce: AddExpr
			reduce(33), // >, reduce: AddExpr
			reduce(33), // !=, reduce: AddExpr
			reduce(33), // +, reduce: AddExpr
			reduce(33), // -, reduce: AddExpr
			shift(118), // *
			shift(119), // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S79
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(36), // ), reduce: MulExpr
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			reduce(36), // <, reduce: MulExpr
			reduce(36), // >, reduce: MulExpr
			reduce(36), // !=, reduce: MulExpr
			reduce(36), // +, reduce: MulExpr
			reduce(36), // -, reduce: MulExpr
			reduce(36), // *, reduce: MulExpr
			reduce(36), // /, reduce: MulExpr
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S80
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(39), // ), reduce: Primary
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			reduce(39), // <, reduce: Primary
			reduce(39), // >, reduce: Primary
			reduce(39), // !=, reduce: Primary
			reduce(39), // +, reduce: Primary
			reduce(39), // -, reduce: Primary
			reduce(39), // *, reduce: Primary
			reduce(39), // /, reduce: Primary
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S81
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(40), // ), reduce: Primary
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			reduce(40), // <, reduce: Primary
			reduce(40), // >, reduce: Primary
			reduce(40), // !=, reduce: Primary
			reduce(40), // +, reduce: Primary
			reduce(40), // -, reduce: Primary
			reduce(40), // *, reduce: Primary
			reduce(40), // /, reduce: Primary
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S82
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			shift(120), // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S83
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			shift(121), // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(14), // ), reduce: ParamList
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S84
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			reduce(8), // ,, reduce: Type
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // (
			reduce(8), // ), reduce: Type
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S85
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			reduce(9), // ,, reduce: Type
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // (
			reduce(9), // ), reduce: Type
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S86
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			shift(123), // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S87
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			shift(12), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S88
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			shift(87), // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // (
			nil,       // )
			nil,       // [
			nil,       // ]
			reduce(4), // {, reduce: Vars
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S89
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			shift(126), // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S90
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			reduce(49), // id, reduce: F_Call
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			reduce(49), // }, reduce: F_Call
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			reduce(49), // print, reduce: F_Call
			nil,        // cte_string
			reduce(49), // while, reduce: F_Call
			nil,        // do
			reduce(49), // if, reduce: F_Call
			nil,        // else
		},
	},
	actionRow{ // S91
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			shift(53), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			shift(54), // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(60), // cte_int
			shift(61), // cte_float
			nil,       // print
			shift(63), // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S92
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			reduce(25), // ,, reduce: Expression
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(25), // ), reduce: Expression
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S93
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			shift(128), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			shift(129), // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(133), // cte_int
			shift(134), // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S94
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			reduce(28), // id, reduce: RelOp
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			reduce(28), // (, reduce: RelOp
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(28), // cte_int, reduce: RelOp
			reduce(28), // cte_float, reduce: RelOp
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S95
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			reduce(29), // id, reduce: RelOp
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			reduce(29), // (, reduce: RelOp
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(29), // cte_int, reduce: RelOp
			reduce(29), // cte_float, reduce: RelOp
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S96
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			reduce(30), // id, reduce: RelOp
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			reduce(30), // (, reduce: RelOp
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			reduce(30), // cte_int, reduce: RelOp
			reduce(30), // cte_float, reduce: RelOp
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S97
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			shift(53), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			shift(54), // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(60), // cte_int
			shift(61), // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S98
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			shift(53), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			shift(54), // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(60), // cte_int
			shift(61), // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S99
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			shift(53), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			shift(54), // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(60), // cte_int
			shift(61), // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S100
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			shift(53), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			shift(54), // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(60), // cte_int
			shift(61), // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S101
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			shift(139), // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S102
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			shift(140), // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S103
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			reduce(24), // id, reduce: Assign
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			reduce(24), // }, reduce: Assign
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			reduce(24), // print, reduce: Assign
			nil,        // cte_string
			reduce(24), // while, reduce: Assign
			nil,        // do
			reduce(24), // if, reduce: Assign
			nil,        // else
		},
	},
	actionRow{ // S104
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			reduce(25), // ;, reduce: Expression
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S105
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			shift(141), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			shift(142), // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(146), // cte_int
			shift(147), // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S106
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			shift(64), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			shift(65), // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(70), // cte_int
			shift(71), // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S107
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			shift(64), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			shift(65), // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(70), // cte_int
			shift(71), // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S108
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			shift(64), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			shift(65), // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(70), // cte_int
			shift(71), // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S109
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			shift(64), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			shift(65), // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(70), // cte_int
			shift(71), // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S110
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			reduce(41), // id, reduce: Print
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			reduce(41), // }, reduce: Print
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			reduce(41), // print, reduce: Print
			nil,        // cte_string
			reduce(41), // while, reduce: Print
			nil,        // do
			reduce(41), // if, reduce: Print
			nil,        // else
		},
	},
	actionRow{ // S111
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			shift(152), // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S112
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			shift(153), // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S113
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			shift(154), // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S114
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(25), // ), reduce: Expression
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S115
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			shift(155), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			shift(156), // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(160), // cte_int
			shift(161), // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S116
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			shift(74), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			shift(75), // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(80), // cte_int
			shift(81), // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S117
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			shift(74), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			shift(75), // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(80), // cte_int
			shift(81), // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S118
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			shift(74), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			shift(75), // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(80), // cte_int
			shift(81), // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S119
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			shift(74), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			shift(75), // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(80), // cte_int
			shift(81), // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S120
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			shift(167), // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S121
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			shift(38), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S122
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			shift(169), // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S123
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			shift(27),  // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			reduce(17), // }, reduce: StatementList
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			shift(35),  // print
			nil,        // cte_string
			shift(36),  // while
			nil,        // do
			shift(37),  // if
			nil,        // else
		},
	},
	actionRow{ // S124
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			shift(171), // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S125
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			shift(123), // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S126
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			reduce(37), // ,, reduce: Primary
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(37), // ), reduce: Primary
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			reduce(37), // <, reduce: Primary
			reduce(37), // >, reduce: Primary
			reduce(37), // !=, reduce: Primary
			reduce(37), // +, reduce: Primary
			reduce(37), // -, reduce: Primary
			reduce(37), // *, reduce: Primary
			reduce(37), // /, reduce: Primary
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S127
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(44), // ), reduce: ArgList
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S128
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			reduce(38), // ,, reduce: Primary
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(38), // ), reduce: Primary
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			reduce(38), // +, reduce: Primary
			reduce(38), // -, reduce: Primary
			reduce(38), // *, reduce: Primary
			reduce(38), // /, reduce: Primary
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S129
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			shift(74), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			shift(75), // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(80), // cte_int
			shift(81), // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S130
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			reduce(27), // ,, reduce: RelExpr
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(27), // ), reduce: RelExpr
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			shift(174), // +
			shift(175), // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S131
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			reduce(33), // ,, reduce: AddExpr
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(33), // ), reduce: AddExpr
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			reduce(33), // +, reduce: AddExpr
			reduce(33), // -, reduce: AddExpr
			shift(176), // *
			shift(177), // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S132
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			reduce(36), // ,, reduce: MulExpr
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(36), // ), reduce: MulExpr
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			reduce(36), // +, reduce: MulExpr
			reduce(36), // -, reduce: MulExpr
			reduce(36), // *, reduce: MulExpr
			reduce(36), // /, reduce: MulExpr
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S133
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			reduce(39), // ,, reduce: Primary
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(39), // ), reduce: Primary
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			reduce(39), // +, reduce: Primary
			reduce(39), // -, reduce: Primary
			reduce(39), // *, reduce: Primary
			reduce(39), // /, reduce: Primary
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S134
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			reduce(40), // ,, reduce: Primary
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(40), // ), reduce: Primary
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			reduce(40), // +, reduce: Primary
			reduce(40), // -, reduce: Primary
			reduce(40), // *, reduce: Primary
			reduce(40), // /, reduce: Primary
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S135
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			reduce(31), // ,, reduce: AddExpr
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(31), // ), reduce: AddExpr
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			reduce(31), // <, reduce: AddExpr
			reduce(31), // >, reduce: AddExpr
			reduce(31), // !=, reduce: AddExpr
			reduce(31), // +, reduce: AddExpr
			reduce(31), // -, reduce: AddExpr
			shift(99),  // *
			shift(100), // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S136
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			reduce(32), // ,, reduce: AddExpr
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(32), // ), reduce: AddExpr
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			reduce(32), // <, reduce: AddExpr
			reduce(32), // >, reduce: AddExpr
			reduce(32), // !=, reduce: AddExpr
			reduce(32), // +, reduce: AddExpr
			reduce(32), // -, reduce: AddExpr
			shift(99),  // *
			shift(100), // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S137
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			reduce(34), // ,, reduce: MulExpr
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(34), // ), reduce: MulExpr
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			reduce(34), // <, reduce: MulExpr
			reduce(34), // >, reduce: MulExpr
			reduce(34), // !=, reduce: MulExpr
			reduce(34), // +, reduce: MulExpr
			reduce(34), // -, reduce: MulExpr
			reduce(34), // *, reduce: MulExpr
			reduce(34), // /, reduce: MulExpr
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S138
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			reduce(35), // ,, reduce: MulExpr
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(35), // ), reduce: MulExpr
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			reduce(35), // <, reduce: MulExpr
			reduce(35), // >, reduce: MulExpr
			reduce(35), // !=, reduce: MulExpr
			reduce(35), // +, reduce: MulExpr
			reduce(35), // -, reduce: MulExpr
			reduce(35), // *, reduce: MulExpr
			reduce(35), // /, reduce: MulExpr
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S139
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			reduce(50), // id, reduce: F_Call
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			reduce(50), // }, reduce: F_Call
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			reduce(50), // print, reduce: F_Call
			nil,        // cte_string
			reduce(50), // while, reduce: F_Call
			nil,        // do
			reduce(50), // if, reduce: F_Call
			nil,        // else
		},
	},
	actionRow{ // S140
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			reduce(37), // ;, reduce: Primary
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			reduce(37), // <, reduce: Primary
			reduce(37), // >, reduce: Primary
			reduce(37), // !=, reduce: Primary
			reduce(37), // +, reduce: Primary
			reduce(37), // -, reduce: Primary
			reduce(37), // *, reduce: Primary
			reduce(37), // /, reduce: Primary
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S141
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			reduce(38), // ;, reduce: Primary
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			reduce(38), // +, reduce: Primary
			reduce(38), // -, reduce: Primary
			reduce(38), // *, reduce: Primary
			reduce(38), // /, reduce: Primary
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S142
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			shift(74), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			shift(75), // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(80), // cte_int
			shift(81), // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S143
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			reduce(27), // ;, reduce: RelExpr
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			shift(179), // +
			shift(180), // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S144
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			reduce(33), // ;, reduce: AddExpr
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			reduce(33), // +, reduce: AddExpr
			reduce(33), // -, reduce: AddExpr
			shift(181), // *
			shift(182), // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S145
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			reduce(36), // ;, reduce: MulExpr
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			reduce(36), // +, reduce: MulExpr
			reduce(36), // -, reduce: MulExpr
			reduce(36), // *, reduce: MulExpr
			reduce(36), // /, reduce: MulExpr
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S146
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			reduce(39), // ;, reduce: Primary
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			reduce(39), // +, reduce: Primary
			reduce(39), // -, reduce: Primary
			reduce(39), // *, reduce: Primary
			reduce(39), // /, reduce: Primary
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S147
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			reduce(40), // ;, reduce: Primary
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			reduce(40), // +, reduce: Primary
			reduce(40), // -, reduce: Primary
			reduce(40), // *, reduce: Primary
			reduce(40), // /, reduce: Primary
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S148
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			reduce(31), // ;, reduce: AddExpr
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			reduce(31), // <, reduce: AddExpr
			reduce(31), // >, reduce: AddExpr
			reduce(31), // !=, reduce: AddExpr
			reduce(31), // +, reduce: AddExpr
			reduce(31), // -, reduce: AddExpr
			shift(108), // *
			shift(109), // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S149
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			reduce(32), // ;, reduce: AddExpr
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			reduce(32), // <, reduce: AddExpr
			reduce(32), // >, reduce: AddExpr
			reduce(32), // !=, reduce: AddExpr
			reduce(32), // +, reduce: AddExpr
			reduce(32), // -, reduce: AddExpr
			shift(108), // *
			shift(109), // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S150
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			reduce(34), // ;, reduce: MulExpr
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			reduce(34), // <, reduce: MulExpr
			reduce(34), // >, reduce: MulExpr
			reduce(34), // !=, reduce: MulExpr
			reduce(34), // +, reduce: MulExpr
			reduce(34), // -, reduce: MulExpr
			reduce(34), // *, reduce: MulExpr
			reduce(34), // /, reduce: MulExpr
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S151
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			reduce(35), // ;, reduce: MulExpr
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			reduce(35), // <, reduce: MulExpr
			reduce(35), // >, reduce: MulExpr
			reduce(35), // !=, reduce: MulExpr
			reduce(35), // +, reduce: MulExpr
			reduce(35), // -, reduce: MulExpr
			reduce(35), // *, reduce: MulExpr
			reduce(35), // /, reduce: MulExpr
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S152
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			reduce(42), // id, reduce: Print
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			reduce(42), // }, reduce: Print
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			reduce(42), // print, reduce: Print
			nil,        // cte_string
			reduce(42), // while, reduce: Print
			nil,        // do
			reduce(42), // if, reduce: Print
			nil,        // else
		},
	},
	actionRow{ // S153
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(37), // ), reduce: Primary
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			reduce(37), // <, reduce: Primary
			reduce(37), // >, reduce: Primary
			reduce(37), // !=, reduce: Primary
			reduce(37), // +, reduce: Primary
			reduce(37), // -, reduce: Primary
			reduce(37), // *, reduce: Primary
			reduce(37), // /, reduce: Primary
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S154
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			shift(184), // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S155
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(38), // ), reduce: Primary
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			reduce(38), // +, reduce: Primary
			reduce(38), // -, reduce: Primary
			reduce(38), // *, reduce: Primary
			reduce(38), // /, reduce: Primary
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S156
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			shift(74), // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			shift(75), // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			shift(80), // cte_int
			shift(81), // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S157
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(27), // ), reduce: RelExpr
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			shift(186), // +
			shift(187), // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S158
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(33), // ), reduce: AddExpr
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			reduce(33), // +, reduce: AddExpr
			reduce(33), // -, reduce: AddExpr
			shift(188), // *
			shift(189), // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S159
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(36), // ), reduce: MulExpr
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			reduce(36), // +, reduce: MulExpr
			reduce(36), // -, reduce: MulExpr
			reduce(36), // *, reduce: MulExpr
			reduce(36), // /, reduce: MulExpr
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S160
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(39), // ), reduce: Primary
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			reduce(39), // +, reduce: Primary
			reduce(39), // -, reduce: Primary
			reduce(39), // *, reduce: Primary
			reduce(39), // /, reduce: Primary
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S161
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(40), // ), reduce: Primary
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			reduce(40), // +, reduce: Primary
			reduce(40), // -, reduce: Primary
			reduce(40), // *, reduce: Primary
			reduce(40), // /, reduce: Primary
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S162
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(31), // ), reduce: AddExpr
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			reduce(31), // <, reduce: AddExpr
			reduce(31), // >, reduce: AddExpr
			reduce(31), // !=, reduce: AddExpr
			reduce(31), // +, reduce: AddExpr
			reduce(31), // -, reduce: AddExpr
			shift(118), // *
			shift(119), // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S163
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(32), // ), reduce: AddExpr
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			reduce(32), // <, reduce: AddExpr
			reduce(32), // >, reduce: AddExpr
			reduce(32), // !=, reduce: AddExpr
			reduce(32), // +, reduce: AddExpr
			reduce(32), // -, reduce: AddExpr
			shift(118), // *
			shift(119), // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S164
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(34), // ), reduce: MulExpr
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			reduce(34), // <, reduce: MulExpr
			reduce(34), // >, reduce: MulExpr
			reduce(34), // !=, reduce: MulExpr
			reduce(34), // +, reduce: MulExpr
			reduce(34), // -, reduce: MulExpr
			reduce(34), // *, reduce: MulExpr
			reduce(34), // /, reduce: MulExpr
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S165
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(35), // ), reduce: MulExpr
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			reduce(35), // <, reduce: MulExpr
			reduce(35), // >, reduce: MulExpr
			reduce(35), // !=, reduce: MulExpr
			reduce(35), // +, reduce: MulExpr
			reduce(35), // -, reduce: MulExpr
			reduce(35), // *, reduce: MulExpr
			reduce(35), // /, reduce: MulExpr
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S166
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			shift(190), // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			shift(191), // else
		},
	},
	actionRow{ // S167
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			shift(27),  // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			reduce(17), // }, reduce: StatementList
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			shift(35),  // print
			nil,        // cte_string
			shift(36),  // while
			nil,        // do
			shift(37),  // if
			nil,        // else
		},
	},
	actionRow{ // S168
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(15), // ), reduce: ParamList
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S169
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			shift(193), // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S170
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			shift(194), // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S171
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			shift(24), // int
			shift(25), // float
			nil,       // void
			nil,       // (
			nil,       // )
			nil,       // [
			nil,       // ]
			nil,       // {
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S172
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			shift(196), // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S173
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			shift(197), // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S174
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			shift(128), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			shift(129), // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(133), // cte_int
			shift(134), // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S175
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			shift(128), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			shift(129), // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(133), // cte_int
			shift(134), // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S176
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			shift(128), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			shift(129), // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(133), // cte_int
			shift(134), // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S177
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			shift(128), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			shift(129), // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(133), // cte_int
			shift(134), // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S178
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			shift(202), // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S179
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			shift(141), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			shift(142), // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(146), // cte_int
			shift(147), // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S180
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			shift(141), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			shift(142), // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(146), // cte_int
			shift(147), // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S181
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			shift(141), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			shift(142), // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(146), // cte_int
			shift(147), // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S182
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			shift(141), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			shift(142), // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(146), // cte_int
			shift(147), // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S183
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			shift(207), // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S184
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			shift(27),  // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			reduce(17), // }, reduce: StatementList
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			shift(35),  // print
			nil,        // cte_string
			shift(36),  // while
			nil,        // do
			shift(37),  // if
			nil,        // else
		},
	},
	actionRow{ // S185
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			shift(209), // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S186
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			shift(155), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			shift(156), // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(160), // cte_int
			shift(161), // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S187
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			shift(155), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			shift(156), // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(160), // cte_int
			shift(161), // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S188
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			shift(155), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			shift(156), // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(160), // cte_int
			shift(161), // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S189
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			shift(155), // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			shift(156), // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			shift(160), // cte_int
			shift(161), // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S190
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			reduce(48), // id, reduce: Condition
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			reduce(48), // }, reduce: Condition
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			reduce(48), // print, reduce: Condition
			nil,        // cte_string
			reduce(48), // while, reduce: Condition
			nil,        // do
			reduce(48), // if, reduce: Condition
			nil,        // else
		},
	},
	actionRow{ // S191
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			shift(184), // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S192
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			shift(215), // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S193
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			reduce(12), // main, reduce: Func
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			reduce(12), // void, reduce: Func
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S194
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			reduce(16), // ], reduce: Body
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S195
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			shift(216), // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S196
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			shift(217), // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S197
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			reduce(37), // ,, reduce: Primary
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(37), // ), reduce: Primary
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			reduce(37), // +, reduce: Primary
			reduce(37), // -, reduce: Primary
			reduce(37), // *, reduce: Primary
			reduce(37), // /, reduce: Primary
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S198
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			reduce(31), // ,, reduce: AddExpr
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(31), // ), reduce: AddExpr
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			reduce(31), // +, reduce: AddExpr
			reduce(31), // -, reduce: AddExpr
			shift(176), // *
			shift(177), // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S199
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			reduce(32), // ,, reduce: AddExpr
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(32), // ), reduce: AddExpr
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			reduce(32), // +, reduce: AddExpr
			reduce(32), // -, reduce: AddExpr
			shift(176), // *
			shift(177), // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S200
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			reduce(34), // ,, reduce: MulExpr
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(34), // ), reduce: MulExpr
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			reduce(34), // +, reduce: MulExpr
			reduce(34), // -, reduce: MulExpr
			reduce(34), // *, reduce: MulExpr
			reduce(34), // /, reduce: MulExpr
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S201
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			reduce(35), // ,, reduce: MulExpr
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(35), // ), reduce: MulExpr
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			reduce(35), // +, reduce: MulExpr
			reduce(35), // -, reduce: MulExpr
			reduce(35), // *, reduce: MulExpr
			reduce(35), // /, reduce: MulExpr
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S202
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			reduce(37), // ;, reduce: Primary
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			reduce(37), // +, reduce: Primary
			reduce(37), // -, reduce: Primary
			reduce(37), // *, reduce: Primary
			reduce(37), // /, reduce: Primary
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S203
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			reduce(31), // ;, reduce: AddExpr
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			reduce(31), // +, reduce: AddExpr
			reduce(31), // -, reduce: AddExpr
			shift(181), // *
			shift(182), // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S204
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			reduce(32), // ;, reduce: AddExpr
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			reduce(32), // +, reduce: AddExpr
			reduce(32), // -, reduce: AddExpr
			shift(181), // *
			shift(182), // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S205
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			reduce(34), // ;, reduce: MulExpr
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			reduce(34), // +, reduce: MulExpr
			reduce(34), // -, reduce: MulExpr
			reduce(34), // *, reduce: MulExpr
			reduce(34), // /, reduce: MulExpr
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S206
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			reduce(35), // ;, reduce: MulExpr
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			reduce(35), // +, reduce: MulExpr
			reduce(35), // -, reduce: MulExpr
			reduce(35), // *, reduce: MulExpr
			reduce(35), // /, reduce: MulExpr
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S207
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			reduce(46), // id, reduce: Cycle
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			reduce(46), // }, reduce: Cycle
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			reduce(46), // print, reduce: Cycle
			nil,        // cte_string
			reduce(46), // while, reduce: Cycle
			nil,        // do
			reduce(46), // if, reduce: Cycle
			nil,        // else
		},
	},
	actionRow{ // S208
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			shift(218), // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S209
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(37), // ), reduce: Primary
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			reduce(37), // +, reduce: Primary
			reduce(37), // -, reduce: Primary
			reduce(37), // *, reduce: Primary
			reduce(37), // /, reduce: Primary
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S210
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(31), // ), reduce: AddExpr
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			reduce(31), // +, reduce: AddExpr
			reduce(31), // -, reduce: AddExpr
			shift(188), // *
			shift(189), // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S211
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(32), // ), reduce: AddExpr
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			reduce(32), // +, reduce: AddExpr
			reduce(32), // -, reduce: AddExpr
			shift(188), // *
			shift(189), // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S212
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(34), // ), reduce: MulExpr
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			reduce(34), // +, reduce: MulExpr
			reduce(34), // -, reduce: MulExpr
			reduce(34), // *, reduce: MulExpr
			reduce(34), // /, reduce: MulExpr
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S213
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			reduce(35), // ), reduce: MulExpr
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			reduce(35), // +, reduce: MulExpr
			reduce(35), // -, reduce: MulExpr
			reduce(35), // *, reduce: MulExpr
			reduce(35), // /, reduce: MulExpr
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S214
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			shift(219), // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S215
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			reduce(16), // ;, reduce: Body
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			reduce(16), // else, reduce: Body
		},
	},
	actionRow{ // S216
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			shift(87), // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // (
			nil,       // )
			nil,       // [
			nil,       // ]
			reduce(4), // {, reduce: Vars
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
	actionRow{ // S217
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			nil,        // ;
			reduce(13), // main, reduce: Func
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			reduce(13), // void, reduce: Func
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S218
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			nil,        // id
			reduce(16), // ;, reduce: Body
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			nil,        // }
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			nil,        // print
			nil,        // cte_string
			nil,        // while
			nil,        // do
			nil,        // if
			nil,        // else
		},
	},
	actionRow{ // S219
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // empty
			nil,        // program
			reduce(47), // id, reduce: Condition
			nil,        // ;
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // :
			nil,        // ,
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // (
			nil,        // )
			nil,        // [
			nil,        // ]
			nil,        // {
			reduce(47), // }, reduce: Condition
			nil,        // =
			nil,        // <
			nil,        // >
			nil,        // !=
			nil,        // +
			nil,        // -
			nil,        // *
			nil,        // /
			nil,        // cte_int
			nil,        // cte_float
			reduce(47), // print, reduce: Condition
			nil,        // cte_string
			reduce(47), // while, reduce: Condition
			nil,        // do
			reduce(47), // if, reduce: Condition
			nil,        // else
		},
	},
	actionRow{ // S220
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // empty
			nil,       // program
			nil,       // id
			nil,       // ;
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // :
			nil,       // ,
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // (
			nil,       // )
			nil,       // [
			nil,       // ]
			reduce(5), // {, reduce: Vars
			nil,       // }
			nil,       // =
			nil,       // <
			nil,       // >
			nil,       // !=
			nil,       // +
			nil,       // -
			nil,       // *
			nil,       // /
			nil,       // cte_int
			nil,       // cte_float
			nil,       // print
			nil,       // cte_string
			nil,       // while
			nil,       // do
			nil,       // if
			nil,       // else
		},
	},
}
